name: 'Access Token'
description: 'Generate Github Access Token By app'
inputs:
  github_app_id:
    description: 'App Id'
    required: true
  github_installation_id:
    description: 'Installation ID'
    required: true
  pem_key:
    description: 'Private key'
    required: true
runs:
  using: composite
  steps:

  - name: Configurar Python
    uses: actions/setup-python@v5
    with:
      python-version: '3.x'

  - name: Install dependencies
    shell: bash
    run: |
      python -m pip install --upgrade pip
      pip install PyJWT requests

  - name: Generate JWT and get access token
    shell: bash
    env:
      APP_ID: ${{ inputs.github_app_id }}
      INSTALLATION_ID: ${{ inputs.github_installation_id }}
      PRIVATE_KEY: ${{ inputs.pem_key }}
    run: |
      import jwt
      import time
      import requests
      import os

      # Load secrets from environment variables
      app_id = os.environ['APP_ID']
      installation_id = os.environ['INSTALLATION_ID']
      private_key = os.environ['PRIVATE_KEY']

      # Create JWT token
      now = int(time.time())
      payload = {
          'iat': now,
          'exp': now + 600,  # Token valid for 10 minutes
          'iss': app_id
      }
      jwt_token = jwt.encode(payload, private_key, algorithm='RS256')

      # Get access token
      url = f'https://api.github.com/app/installations/{installation_id}/access_tokens'
      headers = {
          'Authorization': f'Bearer {jwt_token}',
          'Accept': 'application/vnd.github.v3+json'
      }
      response = requests.post(url, headers=headers)

      if response.status_code == 201:
          access_token = response.json()['token']
          print(f'Access Token: {access_token}')
      else:
          print(f'Error getting access token: {response.status_code}')
          print(response.json())
  
